<h3>Edit record details</h3>
@if (album == null)
{
    <p> Could not load album.</p>
}
else
{

    <EditForm FormName="ExampleForm" Model="@updatedAlbumDto" OnValidSubmit="HandleValidSubmit">
        <div>
            <label>Title</label>
            <InputText id="title" @bind-Value="updatedAlbumDto.Title"></InputText>
        </div>
        <div>
        <label>Year</label>
        <InputNumber id="year" @bind-Value="updatedAlbumDto.Year"></InputNumber>
        </div>
        <div>
            <label>Artist</label>
            <InputText id="artistName" @bind-Value="updatedAlbumDto.ArtistName"></InputText>
        </div>
        <div>
            <label>Description</label>
            <InputTextArea id ="description" @bind-Value="updatedAlbumDto.Description"></InputTextArea>
        </div>
    <button type="Submit">Submit</button> 
    </EditForm>
}


    <p>@response</p>



@code 
{
    [Parameter] public Album? album { get; set; }
    [Parameter] public EventCallback<AlbumInputDto?> OnSubmit { get; set; }
    private string response = ""; 

    public AlbumInputDto? updatedAlbumDto;

    protected override void OnInitialized()
    {
        if(album != null)
        {
            updatedAlbumDto = new AlbumInputDto(album.Title, album.Year, album.ArtistName, album.Description);
        }
    }

    private async Task HandleValidSubmit()
    {
        await OnSubmit.InvokeAsync(updatedAlbumDto);
    }
}




